{
  "args": {},
  "componentId": "components-pageheader-responsiveness",
  "title": "Components/PageHeader/Responsiveness",
  "kind": "Components/PageHeader/Responsiveness",
  "id": "components-pageheader-responsiveness--responsiveness",
  "name": "Responsiveness",
  "story": "Responsiveness",
  "parameters": {
    "docs": {
      "inlineStories": true,
      "iframeHeight": 100,
      "theme": {
        "base": "light",
        "colorPrimary": "#0000001a",
        "colorSecondary": "deepskyblue",
        "appBg": "white",
        "appContentBg": "white",
        "appBorderColor": "#0000001a",
        "appBorderRadius": 4,
        "fontBase": "\"Nunito Sans\", \"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "black",
        "textInverseColor": "rgba(255,255,255,0.9)",
        "textMutedColor": "#666666",
        "barTextColor": "silver",
        "barSelectedColor": "black",
        "barBg": "white",
        "inputBg": "white",
        "inputBorder": "silver",
        "inputTextColor": "black",
        "inputBorderRadius": 4,
        "brandTitle": "Masala Design System v2.13.5",
        "brandUrl": "https://github.com/innovaccer/design-system/"
      },
      "docPage": {
        "customCode": "() => {\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Interventions',\n    },\n    {\n      name: 'menu_2',\n      label: 'No Linked Activites'\n    }\n  ];\n\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      appearance: 'accent2',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n      appearance: 'accent3',\n    }\n  ];\n\n  const options = [\n    {\n      icon: 'print',\n      label: 'Edit',\n      value: 'Edit',\n    },\n    {\n      icon: 'assignment_turned_in',\n      label: 'Complete',\n      value: 'Complete',\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1'\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n    <Text className=\"mr-4\">Updated 1 day ago</Text>\n    <AvatarGroup className=\"mr-5\" list={list}/>\n    <div className=\"mr-4\">\n      <Dropdown\n        menu={true}\n        optionType=\"WITH_ICON\"\n        icon=\"more_horiz\"\n        options={options}\n        align=\"left\"\n      />\n    </div>\n    </div>\n  );\n\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[{\n        label: 'Care potential',\n        link: '/Care potential'\n      }]}\n      onClick={link => console.log(`on-click: ${link}`)}\n    />\n  );\n\n  const status = (\n    <StatusHint appearance=\"info\">Ongoing</StatusHint>\n  );\n\n  const navigation = (\n    <Navigation\n      menus={navigationData}\n      onClick={onClickHandler}\n      active={active}\n    />\n  );\n\n  return (\n    <div className=\"py-6 bg-secondary-lightest\">\n      <PageHeader\n        navigationPosition=\"bottom\"\n        title=\"Pac Follow-Up Protocol\"\n        separator={true}\n        navigation={navigation}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n        status={status}\n      />\n    </div>\n  );\n}"
      }
    },
    "framework": "react",
    "backgrounds": {
      "grid": {
        "cellSize": 20,
        "opacity": 0.5,
        "cellAmount": 5
      },
      "values": [
        {
          "name": "light",
          "value": "#F8F8F8"
        },
        {
          "name": "dark",
          "value": "#333333"
        }
      ]
    },
    "viewMode": "docs",
    "actions": {
      "argTypesRegex": "^on[A-Z].*"
    },
    "a11y": {
      "element": "#root",
      "manual": false
    },
    "viewport": {
      "viewports": {
        "iphone5": {
          "name": "iPhone 5",
          "styles": {
            "height": "568px",
            "width": "320px"
          },
          "type": "mobile"
        },
        "iphone6": {
          "name": "iPhone 6",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone6p": {
          "name": "iPhone 6 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphone8p": {
          "name": "iPhone 8 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonex": {
          "name": "iPhone X",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphonexr": {
          "name": "iPhone XR",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonexsmax": {
          "name": "iPhone XS Max",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonese2": {
          "name": "iPhone SE (2nd generation)",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12mini": {
          "name": "iPhone 12 mini",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12": {
          "name": "iPhone 12",
          "styles": {
            "height": "844px",
            "width": "390px"
          },
          "type": "mobile"
        },
        "iphone12promax": {
          "name": "iPhone 12 Pro Max",
          "styles": {
            "height": "926px",
            "width": "428px"
          },
          "type": "mobile"
        },
        "ipad": {
          "name": "iPad",
          "styles": {
            "height": "1024px",
            "width": "768px"
          },
          "type": "tablet"
        },
        "ipad10p": {
          "name": "iPad Pro 10.5-in",
          "styles": {
            "height": "1112px",
            "width": "834px"
          },
          "type": "tablet"
        },
        "ipad12p": {
          "name": "iPad Pro 12.9-in",
          "styles": {
            "height": "1366px",
            "width": "1024px"
          },
          "type": "tablet"
        },
        "galaxys5": {
          "name": "Galaxy S5",
          "styles": {
            "height": "640px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "galaxys9": {
          "name": "Galaxy S9",
          "styles": {
            "height": "740px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "nexus5x": {
          "name": "Nexus 5X",
          "styles": {
            "height": "660px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "nexus6p": {
          "name": "Nexus 6P",
          "styles": {
            "height": "732px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "pixel": {
          "name": "Pixel",
          "styles": {
            "height": "960px",
            "width": "540px"
          },
          "type": "mobile"
        },
        "pixelxl": {
          "name": "Pixel XL",
          "styles": {
            "height": "1280px",
            "width": "720px"
          },
          "type": "mobile"
        }
      }
    },
    "controls": {
      "expanded": true
    },
    "options": {},
    "fileName": "./core/components/organisms/pageHeader/__stories__/Responsiveness.story.jsx",
    "storySource": {
      "source": "() => {\n  const navigationData = [\n    {\n      name: 'menu_1',\n      label: 'Interventions',\n    },\n    {\n      name: 'menu_2',\n      label: 'No Linked Activites',\n    },\n  ];\n\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n      appearance: 'accent2',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n      appearance: 'accent3',\n    },\n  ];\n\n  const options = [\n    {\n      icon: 'print',\n      label: 'Edit',\n      value: 'Edit',\n    },\n    {\n      icon: 'assignment_turned_in',\n      label: 'Complete',\n      value: 'Complete',\n    },\n  ];\n\n  const [active, setActive] = React.useState({\n    name: 'menu_1',\n  });\n\n  const onClickHandler = (menu) => {\n    setActive(menu);\n  };\n\n  const actions = (\n    <div className=\"d-flex justify-content-end align-items-center\">\n      <Text className=\"mr-4\">Updated 1 day ago</Text>\n      <AvatarGroup className=\"mr-5\" list={list} />\n      <div className=\"mr-4\">\n        <Dropdown menu={true} optionType=\"WITH_ICON\" icon=\"more_horiz\" options={options} align=\"left\" />\n      </div>\n    </div>\n  );\n\n  const breadcrumbs = (\n    <Breadcrumbs\n      list={[\n        {\n          label: 'Care potential',\n          link: '/Care potential',\n        },\n      ]}\n      onClick={(link) => action(`on-click: ${link}`)}\n    />\n  );\n\n  const status = <StatusHint appearance=\"info\">Ongoing</StatusHint>;\n\n  const navigation = <Navigation menus={navigationData} onClick={onClickHandler} active={active} />;\n\n  return (\n    <div className=\"w-100 py-6 bg-secondary-lightest\">\n      <PageHeader\n        navigationPosition=\"bottom\"\n        title=\"Pac Follow-Up Protocol\"\n        separator={true}\n        navigation={navigation}\n        actions={actions}\n        breadcrumbs={breadcrumbs}\n        status={status}\n      />\n    </div>\n  );\n}"
    },
    "__isArgsStory": false,
    "__id": "components-pageheader-responsiveness--responsiveness",
    "globals": {
      "measureEnabled": false,
      "outline": false
    },
    "args": {},
    "argTypes": {
      "title": {
        "name": "title",
        "description": "Page title",
        "type": {
          "required": true,
          "name": "string"
        },
        "table": {
          "type": {
            "summary": "string"
          },
          "defaultValue": null
        }
      },
      "navigation": {
        "name": "navigation",
        "description": "`Navigation` component",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "stepper": {
        "name": "stepper",
        "description": "`Stepper` component",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "actions": {
        "name": "actions",
        "description": "Actions composed of `Button` and meta data",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "tabs": {
        "name": "tabs",
        "description": "`Tab` component",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "breadcrumbs": {
        "name": "breadcrumbs",
        "description": "`Breadcrumbs` component",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "badge": {
        "name": "badge",
        "description": "`Badge` component",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "status": {
        "name": "status",
        "description": "`Status` component",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "meta": {
        "name": "meta",
        "description": "Meta data composed of `Text`",
        "type": {
          "required": false,
          "name": "other",
          "value": "ReactNode"
        },
        "table": {
          "type": {
            "summary": "ReactNode"
          },
          "defaultValue": null
        }
      },
      "navigationPosition": {
        "name": "navigationPosition",
        "description": "Page header layout type",
        "type": {
          "required": false,
          "name": "enum",
          "value": [
            "bottom",
            "center"
          ]
        },
        "table": {
          "type": {
            "summary": "\"bottom\" | \"center\""
          },
          "defaultValue": {
            "summary": "\"center\""
          }
        }
      },
      "separator": {
        "name": "separator",
        "description": "provides a border at bottom",
        "type": {
          "required": false,
          "name": "boolean"
        },
        "table": {
          "type": {
            "summary": "boolean"
          },
          "defaultValue": {
            "summary": "true"
          }
        }
      },
      "className": {
        "name": "className",
        "description": "Adds custom class",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "data-test": {
        "name": "data-test",
        "description": "Stores custom testing data private to the component.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      }
    }
  },
  "initialArgs": {},
  "argTypes": {
    "title": {
      "name": "title",
      "description": "Page title",
      "type": {
        "required": true,
        "name": "string"
      },
      "table": {
        "type": {
          "summary": "string"
        },
        "defaultValue": null
      }
    },
    "navigation": {
      "name": "navigation",
      "description": "`Navigation` component",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "stepper": {
      "name": "stepper",
      "description": "`Stepper` component",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "actions": {
      "name": "actions",
      "description": "Actions composed of `Button` and meta data",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "tabs": {
      "name": "tabs",
      "description": "`Tab` component",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "breadcrumbs": {
      "name": "breadcrumbs",
      "description": "`Breadcrumbs` component",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "badge": {
      "name": "badge",
      "description": "`Badge` component",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "status": {
      "name": "status",
      "description": "`Status` component",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "meta": {
      "name": "meta",
      "description": "Meta data composed of `Text`",
      "type": {
        "required": false,
        "name": "other",
        "value": "ReactNode"
      },
      "table": {
        "type": {
          "summary": "ReactNode"
        },
        "defaultValue": null
      }
    },
    "navigationPosition": {
      "name": "navigationPosition",
      "description": "Page header layout type",
      "type": {
        "required": false,
        "name": "enum",
        "value": [
          "bottom",
          "center"
        ]
      },
      "table": {
        "type": {
          "summary": "\"bottom\" | \"center\""
        },
        "defaultValue": {
          "summary": "\"center\""
        }
      }
    },
    "separator": {
      "name": "separator",
      "description": "provides a border at bottom",
      "type": {
        "required": false,
        "name": "boolean"
      },
      "table": {
        "type": {
          "summary": "boolean"
        },
        "defaultValue": {
          "summary": "true"
        }
      }
    },
    "className": {
      "name": "className",
      "description": "Adds custom class",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "data-test": {
      "name": "data-test",
      "description": "Stores custom testing data private to the component.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    }
  }
}