{
  "args": {},
  "componentId": "components-avatargroup-variants-custom-popper",
  "title": "Components/AvatarGroup/Variants/Custom Popper",
  "kind": "Components/AvatarGroup/Variants/Custom Popper",
  "id": "components-avatargroup-variants-custom-popper--custom-popper",
  "name": "Custom Popper",
  "story": "Custom Popper",
  "parameters": {
    "docs": {
      "inlineStories": true,
      "iframeHeight": 100,
      "theme": {
        "base": "light",
        "colorPrimary": "#0000001a",
        "colorSecondary": "deepskyblue",
        "appBg": "white",
        "appContentBg": "white",
        "appBorderColor": "#0000001a",
        "appBorderRadius": 4,
        "fontBase": "\"Nunito Sans\", \"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "black",
        "textInverseColor": "rgba(255,255,255,0.9)",
        "textMutedColor": "#666666",
        "barTextColor": "silver",
        "barSelectedColor": "black",
        "barBg": "white",
        "inputBg": "white",
        "inputBorder": "silver",
        "inputTextColor": "black",
        "inputBorderRadius": 4,
        "brandTitle": "Masala Design System v2.13.5",
        "brandUrl": "https://github.com/innovaccer/design-system/"
      },
      "docPage": {
        "customCode": "() => {\n  const list = [\n    {\n      firstName: 'John',\n      lastName: 'Doe',\n    },\n    {\n      firstName: 'Steven',\n      lastName: 'Packton',\n    },\n    {\n      firstName: 'Nancy',\n      lastName: 'Wheeler'\n    },\n    {\n      firstName: 'Monica',\n      lastName: 'Geller'\n    },\n    {\n      firstName: 'Arya',\n      lastName: 'Stark',\n    },\n    {\n      firstName: 'Rachel',\n      lastName: 'Green',\n    },\n    {\n      firstName: 'Walter',\n      lastName: 'Wheeler'\n    },\n  ];\n\n  const popperRenderer = (list) => {\n    const AvatarList = list.map((avatar, index) => {\n      const { firstName, lastName, appearance } = avatar;\n\n      return (\n        <div className=\"d-flex align-items-center mr-4 mb-4\" key={index}>\n          <Avatar\n            firstName={firstName}\n            lastName={lastName}\n            appearance={appearance}\n            className=\"mr-4\"\n            withTooltip={false}\n          />\n          <Text>{`${firstName} ${lastName}`}</Text>\n        </div>\n      )\n    });\n\n    return (\n      <div className=\"overflow-auto py-4 px-6\" style={{ maxHeight: '150px' }}>\n        {AvatarList}\n      </div>\n    )\n  };\n\n  return (\n    <AvatarGroup\n      list={list}\n      popoverOptions={{ dark: false, on: 'click', popperRenderer }}\n    />\n  );\n}"
      }
    },
    "framework": "react",
    "backgrounds": {
      "grid": {
        "cellSize": 20,
        "opacity": 0.5,
        "cellAmount": 5
      },
      "values": [
        {
          "name": "light",
          "value": "#F8F8F8"
        },
        {
          "name": "dark",
          "value": "#333333"
        }
      ]
    },
    "viewMode": "docs",
    "actions": {
      "argTypesRegex": "^on[A-Z].*"
    },
    "a11y": {
      "element": "#root",
      "manual": false
    },
    "viewport": {
      "viewports": {
        "iphone5": {
          "name": "iPhone 5",
          "styles": {
            "height": "568px",
            "width": "320px"
          },
          "type": "mobile"
        },
        "iphone6": {
          "name": "iPhone 6",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone6p": {
          "name": "iPhone 6 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphone8p": {
          "name": "iPhone 8 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonex": {
          "name": "iPhone X",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphonexr": {
          "name": "iPhone XR",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonexsmax": {
          "name": "iPhone XS Max",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonese2": {
          "name": "iPhone SE (2nd generation)",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12mini": {
          "name": "iPhone 12 mini",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12": {
          "name": "iPhone 12",
          "styles": {
            "height": "844px",
            "width": "390px"
          },
          "type": "mobile"
        },
        "iphone12promax": {
          "name": "iPhone 12 Pro Max",
          "styles": {
            "height": "926px",
            "width": "428px"
          },
          "type": "mobile"
        },
        "ipad": {
          "name": "iPad",
          "styles": {
            "height": "1024px",
            "width": "768px"
          },
          "type": "tablet"
        },
        "ipad10p": {
          "name": "iPad Pro 10.5-in",
          "styles": {
            "height": "1112px",
            "width": "834px"
          },
          "type": "tablet"
        },
        "ipad12p": {
          "name": "iPad Pro 12.9-in",
          "styles": {
            "height": "1366px",
            "width": "1024px"
          },
          "type": "tablet"
        },
        "galaxys5": {
          "name": "Galaxy S5",
          "styles": {
            "height": "640px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "galaxys9": {
          "name": "Galaxy S9",
          "styles": {
            "height": "740px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "nexus5x": {
          "name": "Nexus 5X",
          "styles": {
            "height": "660px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "nexus6p": {
          "name": "Nexus 6P",
          "styles": {
            "height": "732px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "pixel": {
          "name": "Pixel",
          "styles": {
            "height": "960px",
            "width": "540px"
          },
          "type": "mobile"
        },
        "pixelxl": {
          "name": "Pixel XL",
          "styles": {
            "height": "1280px",
            "width": "720px"
          },
          "type": "mobile"
        }
      }
    },
    "controls": {
      "expanded": true
    },
    "options": {},
    "fileName": "./core/components/atoms/avatarGroup/__stories__/variants/CustomPopper.story.jsx",
    "storySource": {
      "source": "() => {\n  const popperRenderer = (names) => {\n    const AvatarList = names.map((avatar, index) => {\n      const { firstName, lastName, appearance } = avatar;\n\n      return (\n        <div className=\"d-flex align-items-center mr-4 mb-4\" key={index}>\n          <Avatar\n            firstName={firstName}\n            lastName={lastName}\n            appearance={appearance}\n            className=\"mr-4\"\n            withTooltip={false}\n          />\n          <Text>{`${firstName} ${lastName}`}</Text>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"overflow-auto py-4 px-6\" style={{ maxHeight: '150px' }}>\n        {AvatarList}\n      </div>\n    );\n  };\n\n  return <AvatarGroup list={list} popoverOptions={{ popperRenderer, dark: false, on: 'click' }} />;\n}"
    },
    "__isArgsStory": false,
    "__id": "components-avatargroup-variants-custom-popper--custom-popper",
    "globals": {
      "measureEnabled": false,
      "outline": false
    },
    "args": {},
    "argTypes": {
      "list": {
        "name": "list",
        "description": "List of `Avatars`\n\n<pre className=\"DocPage-codeBlock\">\nAvatarData: {\n  firstName?: string;\n  lastName?: string;\n  appearance?: Appearance;\n}\n</pre>",
        "type": {
          "required": true,
          "name": "other",
          "value": "AvatarData[]"
        },
        "table": {
          "type": {
            "summary": "AvatarData[]"
          },
          "defaultValue": null
        }
      },
      "max": {
        "name": "max",
        "description": "Max `Avatars` to show before +x.",
        "type": {
          "required": false,
          "name": "number"
        },
        "table": {
          "type": {
            "summary": "number"
          },
          "defaultValue": {
            "summary": "2"
          }
        }
      },
      "borderColor": {
        "name": "borderColor",
        "description": "Border color of `Avatars`.",
        "type": {
          "required": false,
          "name": "string"
        },
        "table": {
          "type": {
            "summary": "string"
          },
          "defaultValue": {
            "summary": "\"var(--white)\""
          }
        }
      },
      "popoverOptions": {
        "name": "popoverOptions",
        "description": "**Popover for +x avatar**\n\n<pre className=\"DocPage-codeBlock\">\nAvatarPopoverProps: {\n   popperRenderer?: (names: AvatarData[]) => JSX.Element;\n   appendToBody?: boolean;\n   dark?: boolean;\n   position?: Position;\n   on?: ActionType;\n   maxHeight?: number;\n   popperClassName?: string;\n}\n\n| Name | Description | Default |\n| --- | --- | --- |\n| popperRenderer | Callback function to create custom popover content  | |\n| appendToBody | Appends `Popover` wrapper inside body | true |\n| dark | Changes background of `Popover` | true |\n| position | Position to place `Popover` | bottom |\n| on | Event triggering the `Popover` | hover |\n| maxHeight | Max height of `Popover Text Wrapper` (does not work in case of custom popperRenderer) | 150 |\n| popperClassName | Custom classname added to `Popover` | |\n</pre>",
        "type": {
          "required": false,
          "name": "other",
          "value": "AvatarPopoverProps"
        },
        "table": {
          "type": {
            "summary": "AvatarPopoverProps"
          },
          "defaultValue": {
            "summary": "{ }"
          }
        }
      },
      "tooltipPosition": {
        "name": "tooltipPosition",
        "description": "Position to place the tooltip on `Avatars` shown before +x",
        "type": {
          "required": false,
          "name": "enum",
          "value": [
            "bottom",
            "top",
            "top-start",
            "top-end",
            "bottom-start",
            "bottom-end",
            "left",
            "right"
          ]
        },
        "table": {
          "type": {
            "summary": "\"bottom\" | \"top\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"left\" | \"right\""
          },
          "defaultValue": {
            "summary": "\"bottom\""
          }
        }
      },
      "className": {
        "name": "className",
        "description": "Adds custom class",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "data-test": {
        "name": "data-test",
        "description": "Stores custom testing data private to the component.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      }
    }
  },
  "initialArgs": {},
  "argTypes": {
    "list": {
      "name": "list",
      "description": "List of `Avatars`\n\n<pre className=\"DocPage-codeBlock\">\nAvatarData: {\n  firstName?: string;\n  lastName?: string;\n  appearance?: Appearance;\n}\n</pre>",
      "type": {
        "required": true,
        "name": "other",
        "value": "AvatarData[]"
      },
      "table": {
        "type": {
          "summary": "AvatarData[]"
        },
        "defaultValue": null
      }
    },
    "max": {
      "name": "max",
      "description": "Max `Avatars` to show before +x.",
      "type": {
        "required": false,
        "name": "number"
      },
      "table": {
        "type": {
          "summary": "number"
        },
        "defaultValue": {
          "summary": "2"
        }
      }
    },
    "borderColor": {
      "name": "borderColor",
      "description": "Border color of `Avatars`.",
      "type": {
        "required": false,
        "name": "string"
      },
      "table": {
        "type": {
          "summary": "string"
        },
        "defaultValue": {
          "summary": "\"var(--white)\""
        }
      }
    },
    "popoverOptions": {
      "name": "popoverOptions",
      "description": "**Popover for +x avatar**\n\n<pre className=\"DocPage-codeBlock\">\nAvatarPopoverProps: {\n   popperRenderer?: (names: AvatarData[]) => JSX.Element;\n   appendToBody?: boolean;\n   dark?: boolean;\n   position?: Position;\n   on?: ActionType;\n   maxHeight?: number;\n   popperClassName?: string;\n}\n\n| Name | Description | Default |\n| --- | --- | --- |\n| popperRenderer | Callback function to create custom popover content  | |\n| appendToBody | Appends `Popover` wrapper inside body | true |\n| dark | Changes background of `Popover` | true |\n| position | Position to place `Popover` | bottom |\n| on | Event triggering the `Popover` | hover |\n| maxHeight | Max height of `Popover Text Wrapper` (does not work in case of custom popperRenderer) | 150 |\n| popperClassName | Custom classname added to `Popover` | |\n</pre>",
      "type": {
        "required": false,
        "name": "other",
        "value": "AvatarPopoverProps"
      },
      "table": {
        "type": {
          "summary": "AvatarPopoverProps"
        },
        "defaultValue": {
          "summary": "{ }"
        }
      }
    },
    "tooltipPosition": {
      "name": "tooltipPosition",
      "description": "Position to place the tooltip on `Avatars` shown before +x",
      "type": {
        "required": false,
        "name": "enum",
        "value": [
          "bottom",
          "top",
          "top-start",
          "top-end",
          "bottom-start",
          "bottom-end",
          "left",
          "right"
        ]
      },
      "table": {
        "type": {
          "summary": "\"bottom\" | \"top\" | \"top-start\" | \"top-end\" | \"bottom-start\" | \"bottom-end\" | \"left\" | \"right\""
        },
        "defaultValue": {
          "summary": "\"bottom\""
        }
      }
    },
    "className": {
      "name": "className",
      "description": "Adds custom class",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "data-test": {
      "name": "data-test",
      "description": "Stores custom testing data private to the component.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    }
  }
}