{
  "args": {},
  "componentId": "components-verificationcodeinput-all",
  "title": "Components/VerificationCodeInput/All",
  "kind": "Components/VerificationCodeInput/All",
  "id": "components-verificationcodeinput-all--all",
  "name": "All",
  "story": "All",
  "parameters": {
    "docs": {
      "inlineStories": true,
      "iframeHeight": 100,
      "theme": {
        "base": "light",
        "colorPrimary": "#0000001a",
        "colorSecondary": "deepskyblue",
        "appBg": "white",
        "appContentBg": "white",
        "appBorderColor": "#0000001a",
        "appBorderRadius": 4,
        "fontBase": "\"Nunito Sans\", \"Open Sans\", sans-serif",
        "fontCode": "monospace",
        "textColor": "black",
        "textInverseColor": "rgba(255,255,255,0.9)",
        "textMutedColor": "#666666",
        "barTextColor": "silver",
        "barSelectedColor": "black",
        "barBg": "white",
        "inputBg": "white",
        "inputBorder": "silver",
        "inputTextColor": "black",
        "inputBorderRadius": 4,
        "brandTitle": "Masala Design System v2.13.5",
        "brandUrl": "https://github.com/innovaccer/design-system/"
      },
      "docPage": {
        "title": "Input"
      }
    },
    "framework": "react",
    "backgrounds": {
      "grid": {
        "cellSize": 20,
        "opacity": 0.5,
        "cellAmount": 5
      },
      "values": [
        {
          "name": "light",
          "value": "#F8F8F8"
        },
        {
          "name": "dark",
          "value": "#333333"
        }
      ]
    },
    "viewMode": "docs",
    "actions": {
      "argTypesRegex": "^on[A-Z].*"
    },
    "a11y": {
      "element": "#root",
      "manual": false
    },
    "viewport": {
      "viewports": {
        "iphone5": {
          "name": "iPhone 5",
          "styles": {
            "height": "568px",
            "width": "320px"
          },
          "type": "mobile"
        },
        "iphone6": {
          "name": "iPhone 6",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone6p": {
          "name": "iPhone 6 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphone8p": {
          "name": "iPhone 8 Plus",
          "styles": {
            "height": "736px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonex": {
          "name": "iPhone X",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphonexr": {
          "name": "iPhone XR",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonexsmax": {
          "name": "iPhone XS Max",
          "styles": {
            "height": "896px",
            "width": "414px"
          },
          "type": "mobile"
        },
        "iphonese2": {
          "name": "iPhone SE (2nd generation)",
          "styles": {
            "height": "667px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12mini": {
          "name": "iPhone 12 mini",
          "styles": {
            "height": "812px",
            "width": "375px"
          },
          "type": "mobile"
        },
        "iphone12": {
          "name": "iPhone 12",
          "styles": {
            "height": "844px",
            "width": "390px"
          },
          "type": "mobile"
        },
        "iphone12promax": {
          "name": "iPhone 12 Pro Max",
          "styles": {
            "height": "926px",
            "width": "428px"
          },
          "type": "mobile"
        },
        "ipad": {
          "name": "iPad",
          "styles": {
            "height": "1024px",
            "width": "768px"
          },
          "type": "tablet"
        },
        "ipad10p": {
          "name": "iPad Pro 10.5-in",
          "styles": {
            "height": "1112px",
            "width": "834px"
          },
          "type": "tablet"
        },
        "ipad12p": {
          "name": "iPad Pro 12.9-in",
          "styles": {
            "height": "1366px",
            "width": "1024px"
          },
          "type": "tablet"
        },
        "galaxys5": {
          "name": "Galaxy S5",
          "styles": {
            "height": "640px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "galaxys9": {
          "name": "Galaxy S9",
          "styles": {
            "height": "740px",
            "width": "360px"
          },
          "type": "mobile"
        },
        "nexus5x": {
          "name": "Nexus 5X",
          "styles": {
            "height": "660px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "nexus6p": {
          "name": "Nexus 6P",
          "styles": {
            "height": "732px",
            "width": "412px"
          },
          "type": "mobile"
        },
        "pixel": {
          "name": "Pixel",
          "styles": {
            "height": "960px",
            "width": "540px"
          },
          "type": "mobile"
        },
        "pixelxl": {
          "name": "Pixel XL",
          "styles": {
            "height": "1280px",
            "width": "720px"
          },
          "type": "mobile"
        }
      }
    },
    "controls": {
      "expanded": true
    },
    "options": {},
    "fileName": "./core/components/molecules/verificationCodeInput/__stories__/index.story.jsx",
    "storySource": {
      "source": "() => {\n  const inputType = 'number';\n\n  const fields = undefined;\n\n  const value = '6543';\n\n  const placeholder = '-';\n\n  const disabled = false;\n\n  const autoFocus = true;\n\n  const readOnly = false;\n\n  const error = false;\n\n  const pattern = '';\n\n  return (\n    <>\n      <Label withInput={true}>Verification code</Label>\n      <VerificationCodeInput\n        fields={fields}\n        type={inputType}\n        value={value}\n        disabled={disabled}\n        readOnly={readOnly}\n        onComplete={action('on-complete')}\n        onFocus={action('on-focus')}\n        onBlur={action('on-blur')}\n        placeholder={placeholder}\n        error={error}\n        pattern={pattern}\n        // TODO(a11y)\n        \n        autoFocus={autoFocus}\n      />\n    </>\n  );\n}"
    },
    "__isArgsStory": false,
    "__id": "components-verificationcodeinput-all--all",
    "globals": {
      "measureEnabled": false,
      "outline": false
    },
    "args": {},
    "argTypes": {
      "fields": {
        "name": "fields",
        "description": "Number of input fields to be used to compose code input.",
        "type": {
          "required": false,
          "name": "other",
          "value": "number | undefined"
        },
        "table": {
          "type": {
            "summary": "number | undefined"
          },
          "defaultValue": {
            "summary": "4"
          }
        }
      },
      "type": {
        "name": "type",
        "description": "Type of values to be entered.",
        "type": {
          "required": false,
          "name": "enum",
          "value": [
            "undefined",
            "number",
            "text",
            "password"
          ]
        },
        "table": {
          "type": {
            "summary": "undefined | \"number\" | \"text\" | \"password\""
          },
          "defaultValue": {
            "summary": "number"
          }
        }
      },
      "onComplete": {
        "name": "onComplete",
        "description": "Callback triggered after all values are entered.",
        "type": {
          "required": false,
          "name": "function",
          "value": "((value: string) => void) | undefined"
        },
        "table": {
          "type": {
            "summary": "((value: string) => void) | undefined"
          },
          "defaultValue": null
        }
      },
      "className": {
        "name": "className",
        "description": "Adds custom class",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "data-test": {
        "name": "data-test",
        "description": "Stores custom testing data private to the component.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "autoFocus": {
        "name": "autoFocus",
        "description": "Adds autoFocus",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": null
        }
      },
      "disabled": {
        "name": "disabled",
        "description": "Disables the `Input`, making it unable to type",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": null
        }
      },
      "pattern": {
        "name": "pattern",
        "description": "The pattern attribute, when specified, is a regular expression that the input's value\nmust match in order for the value to pass constraint validation.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "placeholder": {
        "name": "placeholder",
        "description": "Text to display when input is empty.\nIncase a label is missing, a placeholder should be provided to make it accessible for all user.",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "readOnly": {
        "name": "readOnly",
        "description": "Disables the `Input`, making it unable to type",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": null
        }
      },
      "required": {
        "name": "required",
        "description": "Shows the user that this field id required",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": null
        }
      },
      "value": {
        "name": "value",
        "description": "Value of the `Input` (Used in case of controlled `Input`)",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      },
      "onFocus": {
        "name": "onFocus",
        "description": "Handler to be called when `Input` gets focus",
        "type": {
          "required": false,
          "name": "function",
          "value": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
        },
        "table": {
          "type": {
            "summary": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
          },
          "defaultValue": null
        }
      },
      "onBlur": {
        "name": "onBlur",
        "description": "Handler to be called when `Input` loses focus",
        "type": {
          "required": false,
          "name": "function",
          "value": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
        },
        "table": {
          "type": {
            "summary": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
          },
          "defaultValue": null
        }
      },
      "onClick": {
        "name": "onClick",
        "description": "Handler to be called when `Input` is clicked",
        "type": {
          "required": false,
          "name": "function",
          "value": "((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"
        },
        "table": {
          "type": {
            "summary": "((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"
          },
          "defaultValue": null
        }
      },
      "error": {
        "name": "error",
        "description": "Shows error state in case of failed validation",
        "type": {
          "required": false,
          "name": "other",
          "value": "boolean | undefined"
        },
        "table": {
          "type": {
            "summary": "boolean | undefined"
          },
          "defaultValue": null
        }
      },
      "minWidth": {
        "name": "minWidth",
        "description": "minimum width of `Input` component\n\n**No default value for `type='number'`**",
        "type": {
          "required": false,
          "name": "other",
          "value": "string | undefined"
        },
        "table": {
          "type": {
            "summary": "string | undefined"
          },
          "defaultValue": null
        }
      }
    }
  },
  "initialArgs": {},
  "argTypes": {
    "fields": {
      "name": "fields",
      "description": "Number of input fields to be used to compose code input.",
      "type": {
        "required": false,
        "name": "other",
        "value": "number | undefined"
      },
      "table": {
        "type": {
          "summary": "number | undefined"
        },
        "defaultValue": {
          "summary": "4"
        }
      }
    },
    "type": {
      "name": "type",
      "description": "Type of values to be entered.",
      "type": {
        "required": false,
        "name": "enum",
        "value": [
          "undefined",
          "number",
          "text",
          "password"
        ]
      },
      "table": {
        "type": {
          "summary": "undefined | \"number\" | \"text\" | \"password\""
        },
        "defaultValue": {
          "summary": "number"
        }
      }
    },
    "onComplete": {
      "name": "onComplete",
      "description": "Callback triggered after all values are entered.",
      "type": {
        "required": false,
        "name": "function",
        "value": "((value: string) => void) | undefined"
      },
      "table": {
        "type": {
          "summary": "((value: string) => void) | undefined"
        },
        "defaultValue": null
      }
    },
    "className": {
      "name": "className",
      "description": "Adds custom class",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "data-test": {
      "name": "data-test",
      "description": "Stores custom testing data private to the component.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "autoFocus": {
      "name": "autoFocus",
      "description": "Adds autoFocus",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": null
      }
    },
    "disabled": {
      "name": "disabled",
      "description": "Disables the `Input`, making it unable to type",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": null
      }
    },
    "pattern": {
      "name": "pattern",
      "description": "The pattern attribute, when specified, is a regular expression that the input's value\nmust match in order for the value to pass constraint validation.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "placeholder": {
      "name": "placeholder",
      "description": "Text to display when input is empty.\nIncase a label is missing, a placeholder should be provided to make it accessible for all user.",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "readOnly": {
      "name": "readOnly",
      "description": "Disables the `Input`, making it unable to type",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": null
      }
    },
    "required": {
      "name": "required",
      "description": "Shows the user that this field id required",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": null
      }
    },
    "value": {
      "name": "value",
      "description": "Value of the `Input` (Used in case of controlled `Input`)",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    },
    "onFocus": {
      "name": "onFocus",
      "description": "Handler to be called when `Input` gets focus",
      "type": {
        "required": false,
        "name": "function",
        "value": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
      },
      "table": {
        "type": {
          "summary": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
        },
        "defaultValue": null
      }
    },
    "onBlur": {
      "name": "onBlur",
      "description": "Handler to be called when `Input` loses focus",
      "type": {
        "required": false,
        "name": "function",
        "value": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
      },
      "table": {
        "type": {
          "summary": "((e: FocusEvent<HTMLInputElement, Element>) => void) | undefined"
        },
        "defaultValue": null
      }
    },
    "onClick": {
      "name": "onClick",
      "description": "Handler to be called when `Input` is clicked",
      "type": {
        "required": false,
        "name": "function",
        "value": "((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"
      },
      "table": {
        "type": {
          "summary": "((e: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined"
        },
        "defaultValue": null
      }
    },
    "error": {
      "name": "error",
      "description": "Shows error state in case of failed validation",
      "type": {
        "required": false,
        "name": "other",
        "value": "boolean | undefined"
      },
      "table": {
        "type": {
          "summary": "boolean | undefined"
        },
        "defaultValue": null
      }
    },
    "minWidth": {
      "name": "minWidth",
      "description": "minimum width of `Input` component\n\n**No default value for `type='number'`**",
      "type": {
        "required": false,
        "name": "other",
        "value": "string | undefined"
      },
      "table": {
        "type": {
          "summary": "string | undefined"
        },
        "defaultValue": null
      }
    }
  }
}